# Import types
from beanie import Document
from typing import Optional, List
from pydantic import BaseModel


# Define afk config
class afkConfig(BaseModel):

    style: int = 0

    enabled: True


# Define logging channels
class loggingChannels(BaseModel):
    """
    - setChannels - `dict` - Every logging channel. Prevents a logging channel from being set multiple times. (key (channel id): eventType)

    - allEvents - `list[str]` - All events

    - allChannelEvents - `list[str]` - All channel related events (documentUpdate, announcementUpdate, forumUpdate, calendarUpdate, channelStateUpdate)
    - allMemberEvents - `list[str]` - All member related events (membershipChange, memberUpdate)

    - membershipChange - `list[str]` - Membership related events. (Joins/Leaves/Kicks/Bans)
    - memberUpdate - `list[str]` - Member update related events (nickname, roles)

    - automod - `list[str]` - Moderation actions generated by the AutoMod.
    - messageChange -` list[str]` - message updated/deleted
    - moderatorAction - `list[str]` - moderator made an action

    - channelStateUpdate - `list[str]` - Channel state changes.
    - forumUpdate - `list[str]` - Forum post was updated
    - documentUpdate - `list[str]` - Document was updated
    - announcementUpdate - `list[str]` - Announcement was updated
    - listUpdate - `list[str]` - List was updated
    - categoryUpdate - `list[str]` - Category was updated
    """

    setChannels: dict = {}

    allEvents: List[str] = list()

    allChannelEvents: List[str] = list()

    allMemberEvents: List[str] = list()

    membershipChange: List[str] = list()

    memberUpdate: List[str] = list()

    automod: List[str] = list()

    messageChange: List[str] = list()

    moderatorAction: List[str] = list()

    channelStateUpdate: List[str] = list()

    forumUpdate: List[str] = list()

    documentUpdate: List[str] = list()

    announcementUpdate: List[str] = list()

    calendarUpdate: List[str] = list()

    listUpdate: List[str] = list()

    categoryUpdate: List[str] = list()


# Define the server document
class Server(Document):
    """
    - serverId - `str` - The server's Id.
    - prefix - `Optional[str]` - The server's prefix.
    - logging - `LoggingChannels` - Logging channels for events.
    - members - `dict` - Members data and punishment log. (Defaults to {})
    - data - `dict` - Server data and configs. (Defaults to {})
    """

    serverId: str

    prefix: Optional[str] = None

    logging: loggingChannels = loggingChannels()

    members: dict = dict()

    data: dict = dict()
